
--drop schema scores cascade;

create schema if not exists scores;

create table
    if not exists scores.compute_and_scaling (
        id bigint generated by default as identity primary key,
        compute_variety int,
        auto_scaling_score int,
        spot_instance_support int,
        distributed_training_support int
    );

create table
    if not exists scores.data_management (
        id bigint generated by default as identity primary key,
        storage_options_score int,
        data_versioning_score int,
        data_pipeline_orchestration int,
        data_integration_score int
);

create table
    if not exists scores.model_development (
        id bigint generated by default as identity primary key,
        framework_support_score int,
        experiment_tracking_score int,
        hyperparameter_tuning_score int,
        notebook_environment_score int
    );

create table
    if not exists scores.mlops_pipeline (
        id bigint generated by default as identity primary key,
        workflow_orchestration_score int,
        cicd_integration_score int,
        model_validation_score int,
        environment_management_score int
    );

create table
    if not exists scores.model_deployment (
        id bigint generated by default as identity primary key,
        deployment_options_score int,
        real_time_inference_score int,
        batch_inference_score int,
        ab_testing_score int,
        canary_deployment_score int
    );

create table
    if not exists scores.monitoring_and_observability (
        id bigint generated by default as identity primary key,
        model_performance_monitoring int,
        data_drift_detection int,
        infrastructure_monitoring int,
        logging_and_alerting int,
        model_explainability int
    );

create table
    if not exists scores.security_and_compliance (
        id bigint generated by default as identity primary key,
        identity_access_management int,
        data_encryption int,
        compliance_certifications int,
        network_security int,
        audit_logging int
    );

create table
    if not exists scores.cost_management (
        id bigint generated by default as identity primary key,
        cost_transparency int,
        resource_optimization int,
        pricing_flexibility int,
        cost_prediction_score int
    );

create table
    if not exists scores.developer_experience (
        id bigint generated by default as identity primary key,
        api_sdk_quality int,
        tool_integration int,
        documentation_quality int,
        community_support int,
        migration_tools int
    );

create table
    if not exists scores.performance_and_reliability (
        id bigint generated by default as identity primary key,
        sla_score int,
        global_availability int,
        disaster_recovery int,
        performance_benchmarks int
    );

create table
    if not exists scores.platform_evaluation (
        id bigint generated by default as identity primary key,
        platform_id bigint not null references platforms.platform_information (id),
        platform_type platforms.platform_types not null,
        evaluation_date timestamp with time zone default current_timestamp,
        evaluator_id varchar(64) null,
        compute_and_scaling_id bigint references scores.compute_and_scaling (id) on delete cascade,
        data_management_id bigint references scores.data_management (id) on delete cascade,
        model_development_id bigint references scores.model_development (id) on delete cascade,
        mlops_pipeline_id bigint references scores.mlops_pipeline (id) on delete cascade,
        model_deployment_id bigint references scores.model_deployment (id) on delete cascade,
        monitoring_and_observability_id bigint references scores.monitoring_and_observability (id) on delete cascade,
        security_and_compliance_id bigint references scores.security_and_compliance (id) on delete cascade,
        cost_management_id bigint references scores.cost_management (id) on delete cascade,
        developer_experience_id bigint references scores.developer_experience (id) on delete cascade,
        performance_and_reliability_id bigint references scores.performance_and_reliability (id) on delete cascade
    );
    
create
or replace view scores.platform_scores_comprehensive as
select
    pe.id as evaluation_id,
    pe.platform_id,
    pe.platform_type,
    pe.evaluation_date,
    pe.evaluator_id,
    -- Compute and Scaling scores
    cs.compute_variety,
    cs.auto_scaling_score,
    cs.spot_instance_support,
    cs.distributed_training_support,
    -- Data Management scores
    dm.storage_options_score,
    dm.data_versioning_score,
    dm.data_pipeline_orchestration,
    dm.data_integration_score,
    -- Model Development scores
    md.framework_support_score,
    md.experiment_tracking_score,
    md.hyperparameter_tuning_score,
    md.notebook_environment_score,
    -- MLOps Pipeline scores
    mp.workflow_orchestration_score,
    mp.cicd_integration_score,
    mp.model_validation_score,
    mp.environment_management_score,
    -- Model Deployment scores
    mdp.deployment_options_score,
    mdp.real_time_inference_score,
    mdp.batch_inference_score,
    mdp.ab_testing_score,
    mdp.canary_deployment_score,
    -- Monitoring and Observability scores
    mo.model_performance_monitoring,
    mo.data_drift_detection,
    mo.infrastructure_monitoring,
    mo.logging_and_alerting,
    mo.model_explainability,
    -- Security and Compliance scores
    sc.identity_access_management,
    sc.data_encryption,
    sc.compliance_certifications,
    sc.network_security,
    sc.audit_logging,
    -- Cost Management scores
    cm.cost_transparency,
    cm.resource_optimization,
    cm.pricing_flexibility,
    cm.cost_prediction_score,
    -- Developer Experience scores
    de.api_sdk_quality,
    de.tool_integration,
    de.documentation_quality,
    de.community_support,
    de.migration_tools,
    -- Performance and Reliability scores
    pr.sla_score,
    pr.global_availability,
    pr.disaster_recovery,
    pr.performance_benchmarks
from
    scores.platform_evaluation pe
    left join scores.compute_and_scaling cs on pe.compute_and_scaling_id = cs.id
    left join scores.data_management dm on pe.data_management_id = dm.id
    left join scores.model_development md on pe.model_development_id = md.id
    left join scores.mlops_pipeline mp on pe.mlops_pipeline_id = mp.id
    left join scores.model_deployment mdp on pe.model_deployment_id = mdp.id
    left join scores.monitoring_and_observability mo on pe.monitoring_and_observability_id = mo.id
    left join scores.security_and_compliance sc on pe.security_and_compliance_id = sc.id
    left join scores.cost_management cm on pe.cost_management_id = cm.id
    left join scores.developer_experience de on pe.developer_experience_id = de.id
    left join scores.performance_and_reliability pr on pe.performance_and_reliability_id = pr.id;

create table if not exists scores.service_evaluation (
    id bigint generated by default as identity primary key,
    platform_id bigint not null references platforms.platform_information(id),
    service_id bigint not null references services.service(id),
    score int not null,
    created_at timestamptz default now(),
    updated_at timestamptz default now()
);

create table if not exists scores.platform_comment (
    id bigint generated by default as identity primary key,
    platform_id bigint not null references platforms.platform_information(id),
    comment text not null,
    created_at timestamptz default now(),
    updated_at timestamptz default now(),
    score int not null
);

create table if not exists scores.service_comment (
    id bigint generated by default as identity primary key,
    service_id bigint not null references services.service(id),
    comment text not null,
    created_at timestamptz default now(),
    updated_at timestamptz default now(),
    score int not null
);